// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-next';
import type { UserGetUsersData, UserGetUsersResponse, UserCreateUserData, UserCreateUserResponse, UserDeleteUserData, UserDeleteUserResponse, UserGetUserData, UserGetUserResponse, UserUpdateUserData, UserUpdateUserResponse } from './types.gen';
import { zUserGetUsersResponse, zUserCreateUserResponse, zUserDeleteUserResponse, zUserGetUserResponse, zUserUpdateUserResponse } from './zod.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class UserService {
    public static userGetUsers<ThrowOnError extends boolean = false>(options?: Options<UserGetUsersData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<UserGetUsersResponse, unknown, ThrowOnError>({
            responseValidator: async (data) => {
                return await zUserGetUsersResponse.parseAsync(data);
            },
            url: '/User',
            ...options
        });
    }
    
    public static userCreateUser<ThrowOnError extends boolean = false>(options: Options<UserCreateUserData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<UserCreateUserResponse, unknown, ThrowOnError>({
            responseValidator: async (data) => {
                return await zUserCreateUserResponse.parseAsync(data);
            },
            url: '/User',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static userDeleteUser<ThrowOnError extends boolean = false>(options: Options<UserDeleteUserData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<UserDeleteUserResponse, unknown, ThrowOnError>({
            responseValidator: async (data) => {
                return await zUserDeleteUserResponse.parseAsync(data);
            },
            url: '/User/{id}',
            ...options
        });
    }
    
    public static userGetUser<ThrowOnError extends boolean = false>(options: Options<UserGetUserData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<UserGetUserResponse, unknown, ThrowOnError>({
            responseValidator: async (data) => {
                return await zUserGetUserResponse.parseAsync(data);
            },
            url: '/User/{id}',
            ...options
        });
    }
    
    public static userUpdateUser<ThrowOnError extends boolean = false>(options: Options<UserUpdateUserData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<UserUpdateUserResponse, unknown, ThrowOnError>({
            responseValidator: async (data) => {
                return await zUserUpdateUserResponse.parseAsync(data);
            },
            url: '/User/{id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}